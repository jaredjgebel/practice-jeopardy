{"version":3,"sources":["redux/reducers/clues.js","redux/constants.js","redux/reducers/ui.js","redux/reducers/index.js","redux/store/index.js","components/elements/FlexCol.js","components/styled/StyledButton.js","components/FrontPage.js","components/styles/styles.js","components/styled/LeftArrow.js","components/styled/RightArrow.js","components/styled/MenuIcon.js","components/styled/Info.js","components/elements/ClueCard.js","redux/actionCreators.js","redux/selectors.js","components/ClueCardContainer.js","components/styled/Background.js","components/styled/StyledContainer.js","components/App.js","serviceWorker.js","index.js"],"names":["defaultState","answerVisible","cluesById","allIds","clues","state","arguments","length","undefined","action","type","Object","objectSpread","payload","obj","forEach","clue","id","question","category","title","value","airDate","airdate","answer","map","loading","gameActive","currentPage","totalPages","error","view","ui","currentPageStr","parseInt","totalPagesStr","combineReducers","enhancer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","FlexCol","styled","Col","withConfig","displayName","componentId","props","direction","align","justify","StyledButton","Button","FrontPage","_ref","toggleActiveGame","getRandomClues","react_default","a","createElement","Fragment","build","style","height","minHeight","className","display","justifyContent","alignItems","textAlign","fontSize","marginBottom","xs","padding","styled_StyledButton","alt","width","onClick","styles","disabled","stroke","fill","enabled","disabledHover","enabledHover","LeftArrow","ArrowLeftCircle","_ref2","_ref3","_ref4","RightArrow","ArrowRightCircle","MenuIcon","Menu","StyledIcon","Info","InfoText","div","visible","StyledInfo","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","prevState","setState","_this2","children","size","Component","ClueCard","toggleAnswerVisible","pageBack","pageForward","fluid","flexDirection","paddingLeft","paddingRight","nogutter","flex","styled_MenuIcon","paddingBottom","styled_LeftArrow","concat","Date","parse","slice","styled_RightArrow","toggleState","isGameActive","isLoading","isAnswerVisible","getCurrentPage","getTotalPages","getClues","getClueIds","convertToString","num","toString","ClueCardContainer","_this$props","clueIds","components_elements_ClueCard","index","totalClues","connect","dispatch","Background","StyledContainer","Container","App","fetchClues","MainComponent","components_ClueCardContainer","components_FrontPage","styled_Background","styled_StyledContainer","fetch","method","then","response","ok","Error","status","statusText","json","getRandomCluesSuccess","catch","err","Boolean","location","hostname","match","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd751729.chunk.js","sourcesContent":["import * as c from \"../constants\";\r\n\r\nconst defaultState = {\r\n  answerVisible: false,\r\n  cluesById: {},\r\n  allIds: []\r\n};\r\n\r\nconst clues = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case c.TOGGLE_ANSWER_VISIBLE:\r\n      return {\r\n        ...state,\r\n        answerVisible: !action.payload.answerVisible\r\n      };\r\n\r\n    case c.GET_RANDOM_CLUES_SUCCESS:\r\n      const obj = {};\r\n\r\n      action.payload.clues.forEach(clue => {\r\n        obj[clue.id] = {\r\n          clue: clue.question,\r\n          category: clue.category.title,\r\n          value: clue.value,\r\n          airDate: clue.airdate,\r\n          answer: clue.answer\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cluesById: obj,\r\n        allIds: action.payload.clues.map(clue => clue.id)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default clues;\r\n","export const GET_RANDOM_CLUES_REQUEST = \"GET_RANDOM_CLUES_REQUEST\";\r\nexport const GET_RANDOM_CLUES_SUCCESS = \"GET_RANDOM_CLUES_SUCCESS\";\r\nexport const GET_RANDOM_CLUES_ERROR = \"GET_RANDOM_CLUES_ERROR\";\r\n\r\nexport const PAGE_BACK = \"PAGE_BACK\";\r\nexport const PAGE_FORWARD = \"PAGE_FORWARD\";\r\n\r\nexport const TOGGLE_ACTIVE_GAME = \"TOGGLE_ACTIVE_GAME\";\r\nexport const TOGGLE_ANSWER_VISIBLE = \"TOGGLE_ANSWER_VISIBLE\";\r\n","import * as c from \"../constants\";\r\n\r\nconst defaultState = {\r\n  loading: false,\r\n  gameActive: false,\r\n  currentPage: null,\r\n  totalPages: null,\r\n  error: null,\r\n  view: null\r\n};\r\n\r\nconst ui = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case c.PAGE_BACK: {\r\n      const currentPageStr = action.payload.currentPage;\r\n      const currentPage = parseInt(currentPageStr);\r\n\r\n      if (currentPage === 1) {\r\n        return state;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        currentPage: currentPage - 1\r\n      };\r\n    }\r\n\r\n    case c.PAGE_FORWARD: {\r\n      const currentPageStr = action.payload.currentPage;\r\n      const currentPage = parseInt(currentPageStr);\r\n\r\n      const totalPagesStr = action.payload.totalPages;\r\n      const totalPages = parseInt(totalPagesStr);\r\n\r\n      if (currentPage >= totalPages) {\r\n        return state;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        currentPage: currentPage + 1\r\n      };\r\n    }\r\n\r\n    case c.TOGGLE_ACTIVE_GAME:\r\n      return { ...state, gameActive: !action.payload };\r\n\r\n    case c.GET_RANDOM_CLUES_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    case c.GET_RANDOM_CLUES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentPage: 1,\r\n        totalPages: action.payload.clues.length\r\n      };\r\n\r\n    case c.GET_RANDOM_CLUES_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ui;\r\n","import { combineReducers } from \"redux\";\r\nimport clues from \"./clues\";\r\nimport ui from \"./ui\";\r\n\r\nexport default combineReducers({\r\n  clues,\r\n  ui\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst enhancer = compose(\r\n  applyMiddleware(thunk),\r\n  (window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__()) ||\r\n    compose\r\n);\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nexport default store;\r\n","import styled from \"styled-components/macro\";\r\nimport { Col } from \"react-grid-system\";\r\n\r\nexport const FlexCol = styled(Col)`\r\n  display: flex;\r\n  flex-direction: ${props => props.direction};\r\n  align-items: ${props => props.align};\r\n  justify-content: ${props => props.justify};\r\n  padding-right: 0px;\r\n  padding-left: 0px;\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Button } from \"reakit\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  background-color: whitesmoke;\r\n  color: #020788;\r\n  padding: 5px 10px;\r\n  border-radius: 1.25em;\r\n  box-shadow: 1px 1px 1px 1px #ccc;\r\n`;\r\n\r\nexport default StyledButton;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-grid-system\";\r\nimport { FlexCol } from \"./elements/FlexCol\";\r\nimport StyledButton from \"./styled/StyledButton\";\r\n\r\nconst FrontPage = ({ toggleActiveGame, getRandomClues }) => {\r\n  return (\r\n    <>\r\n      <Row style={{ height: \"35%\", minHeight: \"200px\" }} className=\"front-page\">\r\n        <Col\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <h1 style={{ fontSize: \"4rem\", marginBottom: \"0px\" }}>\r\n            Practice JEOPARDY!\r\n          </h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <FlexCol\r\n          xs={12}\r\n          direction=\"row\"\r\n          align=\"center\"\r\n          justify=\"center\"\r\n          style={{\r\n            height: \"40%\",\r\n            minHeight: \"200px\",\r\n            padding: \"0px 50px\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <p>\r\n            Flash card-style questions and answers from Jeopardy questions\r\n            throughout the ages\r\n          </p>\r\n        </FlexCol>\r\n      </Row>\r\n      <Row>\r\n        <FlexCol align=\"center\" justify=\"center\" direction=\"column\">\r\n          <StyledButton\r\n            alt=\"start\"\r\n            className=\"start-button\"\r\n            width=\"7rem\"\r\n            onClick={() => {\r\n              toggleActiveGame(false);\r\n              getRandomClues();\r\n            }}\r\n          >\r\n            START\r\n          </StyledButton>\r\n          <p>100 clues from a random date</p>\r\n        </FlexCol>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FrontPage;\r\n","const styles = {\r\n  disabled: {\r\n    stroke: \"gray\",\r\n    fill: \"lightgray\"\r\n  },\r\n  enabled: {\r\n    stroke: \"white\",\r\n    fill: \"020788\"\r\n  },\r\n  disabledHover: {\r\n    stroke: \"gray\",\r\n    fill: \"lightgray\"\r\n  },\r\n  enabledHover: {\r\n    stroke: \"white\",\r\n    fill: \"lightblue\"\r\n  }\r\n};\r\n\r\nexport const buttons = {\r\n  enabled: {\r\n    stroke: \"white\",\r\n    fill: \"020788\"\r\n  },\r\n  enabledHover: {\r\n    stroke: \"white\",\r\n    fill: \"lightblue\"\r\n  }\r\n};\r\n\r\nexport default styles;\r\n","import styled from \"styled-components/macro\";\r\nimport ArrowLeftCircle from \"react-feather/dist/icons/arrow-left-circle\";\r\nimport styles from \"../styles/styles\";\r\n\r\nconst LeftArrow = styled(ArrowLeftCircle)`\r\n  fill: ${({ disabled }) =>\r\n    disabled ? styles.disabled.fill : styles.enabled.fill};\r\n  stroke: ${({ disabled }) =>\r\n    disabled ? styles.disabled.stroke : styles.enabled.stroke};\r\n  :hover {\r\n    fill: ${({ disabled }) =>\r\n      disabled ? styles.disabledHover.fill : styles.enabledHover.fill};\r\n    stroke: ${({ disabled }) =>\r\n      disabled ? styles.disabledHover.stroke : styles.enabledHover.stroke};\r\n  }\r\n`;\r\n\r\nexport default LeftArrow;\r\n","import styled from \"styled-components/macro\";\r\nimport ArrowRightCircle from \"react-feather/dist/icons/arrow-right-circle\";\r\nimport styles from \"../styles/styles\";\r\n\r\nconst RightArrow = styled(ArrowRightCircle)`\r\n  fill: ${({ disabled }) =>\r\n    disabled ? styles.disabled.fill : styles.enabled.fill};\r\n  stroke: ${({ disabled }) =>\r\n    disabled ? styles.disabled.stroke : styles.enabled.stroke};\r\n\r\n  :hover {\r\n    fill: ${({ disabled }) =>\r\n      disabled ? styles.disabledHover.fill : styles.enabledHover.fill};\r\n    stroke: ${({ disabled }) =>\r\n      disabled ? styles.disabledHover.stroke : styles.enabledHover.stroke};\r\n  }\r\n`;\r\n\r\nexport default RightArrow;\r\n","import styled from \"styled-components/macro\";\r\nimport Menu from \"react-feather/dist/icons/menu\";\r\nimport styles from \"../styles/styles\";\r\n\r\nconst MenuIcon = styled(Menu)`\r\n  stroke: ${styles.enabled.stroke};\r\n  min-height: 100px;\r\n  min-width: 100px;\r\n  align-self: center;\r\n`;\r\n\r\nexport default MenuIcon;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport Info from \"react-feather/dist/icons/info\";\r\nimport styles from \"../styles/styles\";\r\n\r\nconst StyledIcon = styled(Info)`\r\n  fill: ${styles.enabled.fill};\r\n  stroke: ${styles.enabled.stroke};\r\n  padding: 10px 20px;\r\n  min-height: 100px;\r\n  min-width: 100px;\r\n  text-align: center;\r\n  align-self: center;\r\n\r\n  :hover {\r\n    fill: ${styles.enabledHover.fill};\r\n    stroke: ${styles.enabledHover.stroke};\r\n  }\r\n`;\r\n\r\nconst InfoText = styled.div`\r\n  visibility: ${({ visible }) => (visible ? \"visible\" : \"hidden\")};\r\n  font-style: italic;\r\n  font-size: 18px;\r\n  line-height: 18px;\r\n  padding: \"10px 10px\";\r\n`;\r\n\r\nclass StyledInfo extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { visible: true };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick(prevState) {\r\n    this.setState({ visible: !prevState });\r\n  }\r\n\r\n  render() {\r\n    const { visible } = this.state;\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <StyledIcon size=\"75px\" onClick={() => this.onClick(visible)} />\r\n        <InfoText visible={visible}>{children}</InfoText>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StyledInfo;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-grid-system\";\r\nimport StyledButton from \"../styled/StyledButton\";\r\nimport LeftArrow from \"../styled/LeftArrow\";\r\nimport RightArrow from \"../styled/RightArrow\";\r\nimport MenuIcon from \"../styled/MenuIcon\";\r\nimport StyledInfo from \"../styled/Info\";\r\nimport \"./ClueCard.css\";\r\n\r\nconst ClueCard = ({\r\n  clue,\r\n  category,\r\n  value,\r\n  airDate,\r\n  answer,\r\n  currentPage,\r\n  totalPages,\r\n  answerVisible,\r\n  toggleActiveGame,\r\n  toggleAnswerVisible,\r\n  pageBack,\r\n  pageForward\r\n}) => {\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"stretch\",\r\n        paddingLeft: \"0px\",\r\n        paddingRight: \"0px\"\r\n      }}\r\n    >\r\n      <Row nogutter style={{ flex: \"0 1 auto\", height: \"20vh\" }}>\r\n        <Col\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            height: \"100%\"\r\n          }}\r\n        >\r\n          <MenuIcon\r\n            className=\"menu\"\r\n            alt=\"menu\"\r\n            size=\"75px\"\r\n            onClick={() => toggleActiveGame(true)}\r\n          />\r\n        </Col>\r\n        <Col\r\n          xs={10}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"100%\"\r\n          }}\r\n        >\r\n          <p className=\"category\" style={{ fontSize: \"26px\" }}>\r\n            {category}\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row nogutter style={{ flex: \"1 1 auto\", paddingBottom: \"30px\" }}>\r\n        <Col\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n          {answerVisible ? (\r\n            <p className=\"answer\">{answer}</p>\r\n          ) : (\r\n            <p className=\"clue\">{clue}</p>\r\n          )}\r\n          <StyledButton\r\n            style={{ fontSize: \"26px\" }}\r\n            onClick={() => {\r\n              toggleAnswerVisible(answerVisible);\r\n            }}\r\n          >\r\n            {answerVisible ? \"BACK TO CLUE\" : \"REVEAL ANSWER\"}\r\n          </StyledButton>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row nogutter style={{ flex: \"0 1 auto\", height: \"20vh\" }}>\r\n        <Col\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            height: \"100%\"\r\n          }}\r\n        >\r\n          <LeftArrow\r\n            alt=\"Page Back\"\r\n            disabled={currentPage === \"1\"}\r\n            size=\"100px\"\r\n            onClick={() => {\r\n              pageBack(currentPage);\r\n\r\n              if (answerVisible) {\r\n                toggleAnswerVisible(answerVisible);\r\n              }\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col\r\n          xs={8}\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"100%\"\r\n          }}\r\n        >\r\n          <StyledInfo>\r\n            <p>{`$${value}`}</p>\r\n            <p>{`Aired ${new Date(Date.parse(airDate))}`.slice(0, -42)}</p>\r\n            <p>{\"Clue \" + currentPage + \" of \" + totalPages}</p>\r\n          </StyledInfo>\r\n        </Col>\r\n        <Col\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n            height: \"100%\"\r\n          }}\r\n        >\r\n          <RightArrow\r\n            alt=\"Page Forward\"\r\n            disabled={currentPage === totalPages}\r\n            size=\"100px\"\r\n            onClick={() => {\r\n              pageForward(currentPage, totalPages);\r\n\r\n              if (answerVisible) {\r\n                toggleAnswerVisible(answerVisible);\r\n              }\r\n            }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ClueCard;\r\n","import * as c from \"./constants\";\r\n// const port = 8080;\r\n// const host = \"localhost\";\r\n// const apiUrl = `http://${host}:${port}`;\r\n\r\nexport const pageBack = currentPage => ({\r\n  type: c.PAGE_BACK,\r\n  payload: {\r\n    currentPage\r\n  }\r\n});\r\n\r\nexport const pageForward = (currentPage, totalPages) => ({\r\n  type: c.PAGE_FORWARD,\r\n  payload: {\r\n    currentPage,\r\n    totalPages\r\n  }\r\n});\r\n\r\nexport const toggleActiveGame = toggleState => ({\r\n  type: c.TOGGLE_ACTIVE_GAME,\r\n  payload: toggleState\r\n});\r\n\r\nexport const toggleAnswerVisible = answerVisible => ({\r\n  type: c.TOGGLE_ANSWER_VISIBLE,\r\n  payload: {\r\n    answerVisible\r\n  }\r\n});\r\n\r\nexport const getRandomCluesRequest = () => ({\r\n  type: c.GET_RANDOM_CLUES_REQUEST\r\n});\r\n\r\nexport const getRandomCluesSuccess = clues => ({\r\n  type: c.GET_RANDOM_CLUES_SUCCESS,\r\n  payload: {\r\n    clues\r\n  }\r\n});\r\n\r\nexport const getRandomCluesError = error => ({\r\n  type: c.GET_RANDOM_CLUES_ERROR,\r\n  payload: {\r\n    error\r\n  }\r\n});\r\n\r\nexport const fetchClues = () => {\r\n  return dispatch => {\r\n    dispatch(getRandomCluesRequest());\r\n\r\n    fetch(`https://practice-jeopardy.herokuapp.com/clues`, {\r\n      method: \"GET\"\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`${response.status} ${response.statusText}`);\r\n        }\r\n\r\n        return response.json();\r\n      })\r\n      .then(clues => {\r\n        dispatch(getRandomCluesSuccess(clues));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getRandomCluesError(err));\r\n      });\r\n  };\r\n};\r\n","export const isGameActive = state => {\r\n  return state.ui && state.ui.gameActive;\r\n};\r\n\r\nexport const isLoading = state => {\r\n  return state.ui && state.ui.loading;\r\n};\r\n\r\nexport const isAnswerVisible = state => {\r\n  return state.clues && state.clues.answerVisible;\r\n};\r\n\r\nexport const getCurrentPage = state => {\r\n  return state.ui && state.ui.currentPage;\r\n};\r\n\r\nexport const getTotalPages = state => {\r\n  return state.ui && state.ui.totalPages;\r\n};\r\n\r\nexport const getClues = state => {\r\n  return state.clues && state.clues.cluesById;\r\n};\r\n\r\nexport const getClueIds = state => {\r\n  return state.clues && state.clues.allIds;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ClueCard from \"../components/elements/ClueCard\";\r\nimport {\r\n  toggleActiveGame,\r\n  toggleAnswerVisible,\r\n  pageBack,\r\n  pageForward\r\n} from \"../redux/actionCreators\";\r\nimport {\r\n  isAnswerVisible,\r\n  isLoading,\r\n  getCurrentPage,\r\n  getTotalPages,\r\n  getClues,\r\n  getClueIds\r\n} from \"../redux/selectors\";\r\n\r\nconst convertToString = num => {\r\n  return num && num.toString();\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    answerVisible: isAnswerVisible(state),\r\n    loading: isLoading(state),\r\n    currentPage: getCurrentPage(state),\r\n    totalPages: getTotalPages(state),\r\n    clues: getClues(state),\r\n    clueIds: getClueIds(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toggleActiveGame: toggleState => {\r\n      dispatch(toggleActiveGame(toggleState));\r\n    },\r\n    toggleAnswerVisible: answerVisible => {\r\n      dispatch(toggleAnswerVisible(answerVisible));\r\n    },\r\n    pageBack: currentPage => {\r\n      dispatch(pageBack(currentPage));\r\n    },\r\n    pageForward: (currentPage, totalPages) => {\r\n      dispatch(pageForward(currentPage, totalPages));\r\n    }\r\n  };\r\n};\r\n\r\nclass ClueCardContainer extends Component {\r\n  render() {\r\n    const {\r\n      loading,\r\n      answerVisible,\r\n      currentPage,\r\n      totalPages,\r\n      clues,\r\n      clueIds,\r\n      toggleActiveGame,\r\n      toggleAnswerVisible,\r\n      pageBack,\r\n      pageForward\r\n    } = this.props;\r\n\r\n    return loading ? (\r\n      <p>Loading...</p>\r\n    ) : (\r\n      <ClueCard\r\n        clue={clues[clueIds[currentPage - 1]].clue}\r\n        answer={clues[clueIds[currentPage - 1]].answer}\r\n        category={clues[clueIds[currentPage - 1]].category}\r\n        value={clues[clueIds[currentPage - 1]].value}\r\n        airDate={clues[clueIds[currentPage - 1]].airDate}\r\n        index={currentPage}\r\n        totalClues={totalPages}\r\n        currentPage={convertToString(currentPage)}\r\n        totalPages={convertToString(totalPages)}\r\n        answerVisible={answerVisible}\r\n        toggleActiveGame={toggleActiveGame}\r\n        toggleAnswerVisible={toggleAnswerVisible}\r\n        pageBack={pageBack}\r\n        pageForward={pageForward}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ClueCardContainer);\r\n","import styled from \"styled-components/macro\";\r\n\r\nconst Background = styled.div`\r\n  background: linear-gradient(180deg, #050b9d 25.52%, #040639 100%), #020788;\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nexport default Background;\r\n","import styled from \"styled-components/macro\";\r\nimport { Container } from \"react-grid-system\";\r\n\r\nconst StyledContainer = styled(Container)`\r\n  height: 100vh;\r\n  color: whitesmoke;\r\n  font-size: 26px;\r\n  text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  text-align: center;\r\n`;\r\n\r\nexport default StyledContainer;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport FrontPage from \"../components/FrontPage\";\nimport ClueCardContainer from \"../components/ClueCardContainer\";\nimport { toggleActiveGame } from \"../redux/actionCreators\";\nimport { isGameActive, isLoading } from \"../redux/selectors\";\nimport { fetchClues } from \"../redux/actionCreators\";\nimport Background from \"./styled/Background\";\nimport StyledContainer from \"./styled/StyledContainer\";\n\nconst mapStateToProps = state => {\n  return {\n    gameActive: isGameActive(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleActiveGame: toggleState => {\n      dispatch(toggleActiveGame(toggleState));\n    },\n    fetchClues: () => {\n      dispatch(fetchClues());\n    }\n  };\n};\n\nclass App extends Component {\n  render() {\n    const { gameActive, toggleActiveGame, fetchClues } = this.props;\n\n    const MainComponent = gameActive ? (\n      <ClueCardContainer />\n    ) : (\n      <FrontPage\n        toggleActiveGame={toggleActiveGame}\n        getRandomClues={fetchClues}\n      />\n    );\n\n    return (\n      <Background>\n        <StyledContainer fluid={true}>{MainComponent}</StyledContainer>\n      </Background>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ScreenClassProvider } from \"react-grid-system\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ScreenClassProvider>\n      <App />\n    </ScreenClassProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}