{"version":3,"sources":["redux/reducers/clues.js","redux/constants.js","redux/reducers/ui.js","redux/reducers/index.js","redux/store/index.js","components/styled/FlexCol.js","components/styled/StyledButton.js","components/FrontPage.js","components/styles/styles.js","components/styled/LeftArrow.js","components/styled/RightArrow.js","components/styled/MenuIcon.js","components/ClueCard/ClueCard.js","redux/actionCreators.js","redux/selectors.js","components/ClueCard/ClueCardContainer.js","components/styled/Background.js","components/styled/StyledContainer.js","components/App.js","serviceWorker.js","index.js"],"names":["defaultState","answerVisible","cluesById","allIds","clues","state","arguments","length","undefined","action","type","Object","objectSpread","payload","obj","forEach","clue","id","question","category","title","value","airDate","airdate","answer","map","loading","gameActive","currentPage","totalPages","error","view","ui","currentPageStr","parseInt","totalPagesStr","combineReducers","enhancer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","FlexCol","styled","Col","withConfig","displayName","componentId","props","flexDirection","alignItems","justifyContent","flexWrap","alignContent","defaultProps","propTypes","direction","PropTypes","oneOf","StyledButton","Button","FrontPage","_ref","toggleActiveGame","getRandomClues","react_default","a","createElement","Fragment","build","style","height","minHeight","className","fontSize","marginBottom","xs","padding","textAlign","align","justify","styled_StyledButton","alt","width","onClick","styles","disabled","stroke","fill","enabled","disabledHover","enabledHover","LeftArrow","ArrowLeftCircle","_ref2","_ref3","_ref4","RightArrow","ArrowRightCircle","MenuIcon","Menu","ClueCard","toggleAnswerVisible","pageBack","pageForward","fluid","display","paddingLeft","paddingRight","styled_MenuIcon","size","nogutter","flex","overflowY","styled_LeftArrow","margin","concat","Date","parse","slice","styled_RightArrow","toggleState","isGameActive","isLoading","isAnswerVisible","getCurrentPage","getTotalPages","getClues","getClueIds","convertToString","num","toString","ClueCardContainer","_this$props","this","clueIds","components_ClueCard_ClueCard","index","totalClues","Component","connect","dispatch","Background","div","StyledContainer","Container","App","fetchClues","MainComponent","ClueCard_ClueCardContainer","components_FrontPage","styled_Background","styled_StyledContainer","fetch","method","then","response","ok","Error","status","statusText","json","getRandomCluesSuccess","catch","err","Boolean","location","hostname","match","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4QAEMA,EAAe,CACnBC,eAAe,EACfC,UAAW,GACXC,OAAQ,IAmCKC,EAhCD,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQC,EAAOC,MACb,ICFiC,wBDG/B,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEJ,eAAgBQ,EAAOI,QAAQZ,gBAGnC,ICfoC,2BDgBlC,IAAMa,EAAM,GAYZ,OAVAL,EAAOI,QAAQT,MAAMW,QAAQ,SAAAC,GAC3BF,EAAIE,EAAKC,IAAM,CACbD,KAAMA,EAAKE,SACXC,SAAUH,EAAKG,SAASC,MACxBC,MAAOL,EAAKK,MACZC,QAASN,EAAKO,QACdC,OAAQR,EAAKQ,UAIVb,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEH,UAAWY,EACXX,OAAQM,EAAOI,QAAQT,MAAMqB,IAAI,SAAAT,GAAI,OAAIA,EAAKC,OAGlD,QACE,OAAOZ,IElCPL,EAAe,CACnB0B,SAAS,EACTC,YAAY,EACZC,YAAa,KACbC,WAAY,KACZC,MAAO,KACPC,KAAM,MAgEOC,EA7DJ,WAAkC,IAAjC3B,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOC,MACb,IDTqB,YCUnB,IAAMuB,EAAiBxB,EAAOI,QAAQe,YAChCA,EAAcM,SAASD,GAE7B,OAAoB,IAAhBL,EACKvB,EAGFM,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEuB,YAAaA,EAAc,IAI/B,IDtBwB,eCuBtB,IAAMK,EAAiBxB,EAAOI,QAAQe,YAChCA,EAAcM,SAASD,GAEvBE,EAAgB1B,EAAOI,QAAQgB,WAGrC,OAAID,GAFeM,SAASC,GAGnB9B,EAGFM,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEuB,YAAaA,EAAc,IAI/B,IDrC8B,qBCsC5B,OAAOjB,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBsB,YAAalB,EAAOI,UAEzC,ID/CoC,2BCgDlC,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEqB,SAAS,IAGb,IDpDoC,2BCqDlC,OAAOf,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEqB,SAAS,EACTE,YAAa,EACbC,WAAYpB,EAAOI,QAAQT,MAAMG,SAGrC,ID3DkC,yBC4DhC,OAAOI,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEqB,SAAS,IAGb,QACE,OAAOrB,IChEE+B,cAAgB,CAC7BhC,QACA4B,OCFIK,EAAWC,YACfC,YAAgBC,KACfC,OAAOC,8BACND,OAAOC,gCACPJ,KAKWK,EAFDC,YAAYC,EAAaR,kFCP1BS,EAAUC,YAAOC,OAAVC,WAAA,CAAAC,YAAA,UAAAC,YAAA,gBAAGJ,CAAH,4IAEA,SAAAK,GAAK,OAAIA,EAAMC,eAClB,SAAAD,GAAK,OAAIA,EAAME,YACX,SAAAF,GAAK,OAAIA,EAAMG,gBACrB,SAAAH,GAAK,OAAIA,EAAMI,UACX,SAAAJ,GAAK,OAAIA,EAAMK,eAKlCX,EAAQY,aAAe,CACrBL,cAAe,OAGjBP,EAAQa,UAAY,CAClBC,UAAWC,IAAUC,MAAM,CACzB,MACA,SACA,cACA,mBAEFR,WAAYO,IAAUC,MAAM,CAC1B,UACA,aACA,WACA,SACA,aAEFP,eAAgBM,IAAUC,MAAM,CAC9B,aACA,WACA,SACA,gBACA,eACA,iBAEFN,SAAUK,IAAUC,MAAM,CAAC,UAAW,OAAQ,iBAC9CL,aAAcI,IAAUC,MAAM,CAC5B,aACA,WACA,SACA,UACA,gBACA,8BClCWC,EAXMhB,YAAOiB,KAAVf,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGJ,CAAH,6JCkDHkB,EAhDG,SAAAC,GAA0C,IAAvCC,EAAuCD,EAAvCC,iBAAkBC,EAAqBF,EAArBE,eACrC,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,IAAD,CAAKC,MAAO,CAAEC,OAAQ,MAAOC,UAAW,SAAWC,UAAU,cAC3DR,EAAAC,EAAAC,cAACzB,EAAD,CAASS,eAAe,SAASD,WAAW,YAC1Ce,EAAAC,EAAAC,cAAA,MAAIG,MAAO,CAAEI,SAAU,OAAQC,aAAc,QAA7C,wBAKJV,EAAAC,EAAAC,cAACE,EAAA,IAAD,KACEJ,EAAAC,EAAAC,cAACzB,EAAD,CACEkC,GAAI,GACJ1B,WAAW,SACXC,eAAe,SACfmB,MAAO,CACLC,OAAQ,MACRC,UAAW,QACXK,QAAS,WACTC,UAAW,WAGbb,EAAAC,EAAAC,cAAA,iGAMJF,EAAAC,EAAAC,cAACE,EAAA,IAAD,KACEJ,EAAAC,EAAAC,cAACzB,EAAD,CAASqC,MAAM,SAASC,QAAQ,SAAS/B,cAAc,UACrDgB,EAAAC,EAAAC,cAACc,EAAD,CACEC,IAAI,QACJT,UAAU,eACVU,MAAM,OACNC,QAAS,WACPrB,GAAiB,GACjBC,MANJ,SAWAC,EAAAC,EAAAC,cAAA,8DChBKkB,EA9BA,CACbC,SAAU,CACRC,OAAQ,OACRC,KAAM,aAERC,QAAS,CACPF,OAAQ,QACRC,KAAM,UAERE,cAAe,CACbH,OAAQ,OACRC,KAAM,aAERG,aAAc,CACZJ,OAAQ,QACRC,KAAM,cCEKI,EAbGjD,YAAOkD,KAAVhD,WAAA,CAAAC,YAAA,YAAAC,YAAA,gBAAGJ,CAAH,qDACL,SAAAmB,GAAA,OAAAA,EAAGwB,SACED,EAAOC,SAASE,KAAOH,EAAOI,QAAQD,MACzC,SAAAM,GAAA,OAAAA,EAAGR,SACAD,EAAOC,SAASC,OAASF,EAAOI,QAAQF,QAE3C,SAAAQ,GAAA,OAAAA,EAAGT,SACED,EAAOK,cAAcF,KAAOH,EAAOM,aAAaH,MACnD,SAAAQ,GAAA,OAAAA,EAAGV,SACAD,EAAOK,cAAcH,OAASF,EAAOM,aAAaJ,0BCKpDU,EAdItD,YAAOuD,KAAVrD,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGJ,CAAH,qDACN,SAAAmB,GAAA,OAAAA,EAAGwB,SACED,EAAOC,SAASE,KAAOH,EAAOI,QAAQD,MACzC,SAAAM,GAAA,OAAAA,EAAGR,SACAD,EAAOC,SAASC,OAASF,EAAOI,QAAQF,QAG3C,SAAAQ,GAAA,OAAAA,EAAGT,SACED,EAAOK,cAAcF,KAAOH,EAAOM,aAAaH,MACnD,SAAAQ,GAAA,OAAAA,EAAGV,SACAD,EAAOK,cAAcH,OAASF,EAAOM,aAAaJ,0BCLpDY,EALExD,YAAOyD,KAAVvD,WAAA,CAAAC,YAAA,WAAAC,YAAA,gBAAGJ,CAAH,kCACF0C,EAAOI,QAAQF,QCoIZc,SAhIE,SAAAvC,GAaX,IAZJlD,EAYIkD,EAZJlD,KACAG,EAWI+C,EAXJ/C,SACAE,EAUI6C,EAVJ7C,MACAC,EASI4C,EATJ5C,QACAE,EAQI0C,EARJ1C,OACAI,EAOIsC,EAPJtC,YACAC,EAMIqC,EANJrC,WACA5B,EAKIiE,EALJjE,cACAkE,EAIID,EAJJC,iBACAuC,EAGIxC,EAHJwC,oBACAC,EAEIzC,EAFJyC,SACAC,EACI1C,EADJ0C,YAEA,OACEvC,EAAAC,EAAAC,cAACE,EAAA,UAAD,CACEoC,OAAK,EACLnC,MAAO,CACLC,OAAQ,QACRmC,QAAS,OACTzD,cAAe,SACfC,WAAY,UACZyD,YAAa,MACbC,aAAc,QAGhB3C,EAAAC,EAAAC,cAACE,EAAA,IAAD,CAAKC,MAAO,CAAEC,OAAQ,SACpBN,EAAAC,EAAAC,cAACzB,EAAD,KACEuB,EAAAC,EAAAC,cAAC0C,EAAD,CACEpC,UAAU,OACVS,IAAI,OACJ4B,KAAK,OACL1B,QAAS,kBAAMrB,GAAiB,QAItCE,EAAAC,EAAAC,cAACE,EAAA,IAAD,CAAK0C,UAAQ,EAACtC,UAAU,MAAMH,MAAO,CAAE0C,KAAM,aAC3C/C,EAAAC,EAAAC,cAACzB,EAAD,CAAS+B,UAAU,OAAOvB,WAAW,SAASD,cAAc,UAC1DgB,EAAAC,EAAAC,cAAA,QAAMM,UAAU,YAAY1D,GAC3BlB,EACCoE,EAAAC,EAAAC,cAAA,KAAGM,UAAU,UAAUrD,GAEvB6C,EAAAC,EAAAC,cAAA,KAAGM,UAAU,QAAQ7D,GAEvBqD,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UACbR,EAAAC,EAAAC,cAACc,EAAD,CACEG,QAAS,WACPkB,EAAoBzG,KAGrBA,EAAgB,eAAiB,oBAM1CoE,EAAAC,EAAAC,cAACE,EAAA,IAAD,CACE0C,UAAQ,EACRzC,MAAO,CAAE0C,KAAM,WAAYzC,OAAQ,OAAQ0C,UAAW,SAEtDhD,EAAAC,EAAAC,cAACzB,EAAD,CACEkC,GAAI,EACJ1B,WAAW,SACXoB,MAAO,CACLC,OAAQ,SAGVN,EAAAC,EAAAC,cAAC+C,EAAD,CACEhC,IAAI,YACJI,SAA0B,MAAhB9D,EACVsF,KAAK,OACL1B,QAAS,WACPmB,EAAS/E,GAEL3B,GACFyG,EAAoBzG,OAK5BoE,EAAAC,EAAAC,cAACzB,EAAD,CACEkC,GAAI,EACJ1B,WAAW,SACXC,eAAe,SACfmB,MAAO,CACLC,OAAQ,SAGVN,EAAAC,EAAAC,cAACzB,EAAD,CACEQ,WAAW,SACXC,eAAe,SACfF,cAAc,UAEdgB,EAAAC,EAAAC,cAAA,KAAGG,MAAO,CAAE6C,OAAQ,YAApB,IAAAC,OAAsCnG,IACtCgD,EAAAC,EAAAC,cAAA,KAAGG,MAAO,CAAE6C,OAAQ,YACjB,SAAAC,OAAS,IAAIC,KAAKA,KAAKC,MAAMpG,KAAYqG,MAAM,GAAI,KAEtDtD,EAAAC,EAAAC,cAAA,KAAGG,MAAO,CAAE6C,OAAQ,YACjB,QAAU3F,EAAc,OAASC,KAIxCwC,EAAAC,EAAAC,cAACzB,EAAD,CACEkC,GAAI,EACJ1B,WAAW,SACXC,eAAe,WACfmB,MAAO,CACLC,OAAQ,SAGVN,EAAAC,EAAAC,cAACqD,EAAD,CACEtC,IAAI,eACJI,SAAU9D,IAAgBC,EAC1BqF,KAAK,OACL1B,QAAS,WACPoB,EAAYhF,EAAaC,GAErB5B,GACFyG,EAAoBzG,WC9GvBkE,EAAmB,SAAA0D,GAAW,MAAK,CAC9CnH,KZXgC,qBYYhCG,QAASgH,ICnBEC,EAAe,SAAAzH,GAC1B,OAAOA,EAAM2B,IAAM3B,EAAM2B,GAAGL,YAGjBoG,EAAY,SAAA1H,GACvB,OAAOA,EAAM2B,IAAM3B,EAAM2B,GAAGN,SAGjBsG,EAAkB,SAAA3H,GAC7B,OAAOA,EAAMD,OAASC,EAAMD,MAAMH,eAGvBgI,EAAiB,SAAA5H,GAC5B,OAAOA,EAAM2B,IAAM3B,EAAM2B,GAAGJ,aAGjBsG,EAAgB,SAAA7H,GAC3B,OAAOA,EAAM2B,IAAM3B,EAAM2B,GAAGH,YAGjBsG,EAAW,SAAA9H,GACtB,OAAOA,EAAMD,OAASC,EAAMD,MAAMF,WAGvBkI,EAAa,SAAA/H,GACxB,OAAOA,EAAMD,OAASC,EAAMD,MAAMD,QCP9BkI,EAAkB,SAAAC,GACtB,OAAOA,GAAOA,EAAIC,YA+BdC,mLACK,IAAAC,EAYHC,KAAKtF,MAVP1B,EAFK+G,EAEL/G,QACAzB,EAHKwI,EAGLxI,cACA2B,EAJK6G,EAIL7G,YACAC,EALK4G,EAKL5G,WACAzB,EANKqI,EAMLrI,MACAuI,EAPKF,EAOLE,QACAxE,EARKsE,EAQLtE,iBACAuC,EATK+B,EASL/B,oBACAC,EAVK8B,EAUL9B,SACAC,EAXK6B,EAWL7B,YAGF,OAAOlF,EACL2C,EAAAC,EAAAC,cAAA,uBAEAF,EAAAC,EAAAC,cAACqE,EAAD,CACE5H,KAAMZ,EAAMuI,EAAQ/G,EAAc,IAAIZ,KACtCQ,OAAQpB,EAAMuI,EAAQ/G,EAAc,IAAIJ,OACxCL,SAAUf,EAAMuI,EAAQ/G,EAAc,IAAIT,SAC1CE,MAAOjB,EAAMuI,EAAQ/G,EAAc,IAAIP,MACvCC,QAASlB,EAAMuI,EAAQ/G,EAAc,IAAIN,QACzCuH,MAAOjH,EACPkH,WAAYjH,EACZD,YAAayG,EAAgBzG,GAC7BC,WAAYwG,EAAgBxG,GAC5B5B,cAAeA,EACfkE,iBAAkBA,EAClBuC,oBAAqBA,EACrBC,SAAUA,EACVC,YAAaA,WAhCWmC,aAsCjBC,cAlES,SAAA3I,GACtB,MAAO,CACLJ,cAAe+H,EAAgB3H,GAC/BqB,QAASqG,EAAU1H,GACnBuB,YAAaqG,EAAe5H,GAC5BwB,WAAYqG,EAAc7H,GAC1BD,MAAO+H,EAAS9H,GAChBsI,QAASP,EAAW/H,KAIG,SAAA4I,GACzB,MAAO,CACL9E,iBAAkB,SAAA0D,GAChBoB,EAAS9E,EAAiB0D,KAE5BnB,oBAAqB,SAAAzG,GACnBgJ,EFjB6B,SAAAhJ,GAAa,MAAK,CACnDS,KZfmC,wBYgBnCG,QAAS,CACPZ,kBEcWyG,CAAoBzG,KAE/B0G,SAAU,SAAA/E,GACRqH,EFxCkB,SAAArH,GAAW,MAAK,CACtClB,KZCuB,YYAvBG,QAAS,CACPe,gBEqCW+E,CAAS/E,KAEpBgF,YAAa,SAAChF,EAAaC,GACzBoH,EFpCqB,SAACrH,EAAaC,GAAd,MAA8B,CACvDnB,KZL0B,eYM1BG,QAAS,CACPe,cACAC,eEgCW+E,CAAYhF,EAAaC,OA2CzBmH,CAGbR,GCjFaU,EARInG,IAAOoG,IAAVlG,WAAA,CAAAC,YAAA,aAAAC,YAAA,eAAGJ,CAAH,wICSDqG,GARSrG,YAAOsG,aAAVpG,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAAGJ,CAAH,8GCyBfuG,oLACK,IAAAb,EAC8CC,KAAKtF,MAAlDzB,EADD8G,EACC9G,WAAYwC,EADbsE,EACatE,iBAAkBoF,EAD/Bd,EAC+Bc,WAEhCC,EAAgB7H,EACpB0C,EAAAC,EAAAC,cAACkF,EAAD,MAEApF,EAAAC,EAAAC,cAACmF,EAAD,CACEvF,iBAAkBA,EAClBC,eAAgBmF,IAIpB,OACElF,EAAAC,EAAAC,cAACoF,EAAD,KACEtF,EAAAC,EAAAC,cAACqF,GAAD,CAAiB/C,OAAO,GAAO2C,WAfrBT,aAqBHC,eAtCS,SAAA3I,GACtB,MAAO,CACLsB,WAAYmG,EAAazH,KAIF,SAAA4I,GACzB,MAAO,CACL9E,iBAAkB,SAAA0D,GAChBoB,EAAS9E,EAAiB0D,KAE5B0B,WAAY,WACVN,ELyBG,SAAAA,GACLA,EApBwC,CAC1CvI,KZ9BsC,6BYmDpCmJ,MAAK,SAAW,CACdC,OAAQ,QAEPC,KAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,GAAA1C,OAAawC,EAASG,OAAtB,KAAA3C,OAAgCwC,EAASI,aAGjD,OAAOJ,EAASK,SAEjBN,KAAK,SAAA3J,GACJ6I,EA7B6B,SAAA7I,GAAK,MAAK,CAC7CM,KZjCsC,2BYkCtCG,QAAS,CACPT,UA0BakK,CAAsBlK,MAEhCmK,MAAM,SAAAC,GACLvB,EAzBqC,CAC3CvI,KZvCoC,yBYwCpCG,QAAS,CACPiB,MAsBiC0I,YKhBtBxB,CAGbM,ICxCkBmB,QACW,cAA7BhI,OAAOiI,SAASC,UAEe,UAA7BlI,OAAOiI,SAASC,UAEhBlI,OAAOiI,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACPzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAUpI,MAAOA,GACf0B,EAAAC,EAAAC,cAACE,EAAA,oBAAD,KACEJ,EAAAC,EAAAC,cAACyG,GAAD,QAGJC,SAASC,eAAe,SD8GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtB,KAAK,SAAAuB,GACjCA,EAAaC","file":"static/js/main.963dc9d0.chunk.js","sourcesContent":["import * as c from \"../constants\";\r\n\r\nconst defaultState = {\r\n  answerVisible: false,\r\n  cluesById: {},\r\n  allIds: []\r\n};\r\n\r\nconst clues = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case c.TOGGLE_ANSWER_VISIBLE:\r\n      return {\r\n        ...state,\r\n        answerVisible: !action.payload.answerVisible\r\n      };\r\n\r\n    case c.GET_RANDOM_CLUES_SUCCESS:\r\n      const obj = {};\r\n\r\n      action.payload.clues.forEach(clue => {\r\n        obj[clue.id] = {\r\n          clue: clue.question,\r\n          category: clue.category.title,\r\n          value: clue.value,\r\n          airDate: clue.airdate,\r\n          answer: clue.answer\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cluesById: obj,\r\n        allIds: action.payload.clues.map(clue => clue.id)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default clues;\r\n","export const GET_RANDOM_CLUES_REQUEST = \"GET_RANDOM_CLUES_REQUEST\";\r\nexport const GET_RANDOM_CLUES_SUCCESS = \"GET_RANDOM_CLUES_SUCCESS\";\r\nexport const GET_RANDOM_CLUES_ERROR = \"GET_RANDOM_CLUES_ERROR\";\r\n\r\nexport const PAGE_BACK = \"PAGE_BACK\";\r\nexport const PAGE_FORWARD = \"PAGE_FORWARD\";\r\n\r\nexport const TOGGLE_ACTIVE_GAME = \"TOGGLE_ACTIVE_GAME\";\r\nexport const TOGGLE_ANSWER_VISIBLE = \"TOGGLE_ANSWER_VISIBLE\";\r\n","import * as c from \"../constants\";\r\n\r\nconst defaultState = {\r\n  loading: false,\r\n  gameActive: false,\r\n  currentPage: null,\r\n  totalPages: null,\r\n  error: null,\r\n  view: null\r\n};\r\n\r\nconst ui = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case c.PAGE_BACK: {\r\n      const currentPageStr = action.payload.currentPage;\r\n      const currentPage = parseInt(currentPageStr);\r\n\r\n      if (currentPage === 1) {\r\n        return state;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        currentPage: currentPage - 1\r\n      };\r\n    }\r\n\r\n    case c.PAGE_FORWARD: {\r\n      const currentPageStr = action.payload.currentPage;\r\n      const currentPage = parseInt(currentPageStr);\r\n\r\n      const totalPagesStr = action.payload.totalPages;\r\n      const totalPages = parseInt(totalPagesStr);\r\n\r\n      if (currentPage >= totalPages) {\r\n        return state;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        currentPage: currentPage + 1\r\n      };\r\n    }\r\n\r\n    case c.TOGGLE_ACTIVE_GAME:\r\n      return { ...state, gameActive: !action.payload };\r\n\r\n    case c.GET_RANDOM_CLUES_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    case c.GET_RANDOM_CLUES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentPage: 1,\r\n        totalPages: action.payload.clues.length\r\n      };\r\n\r\n    case c.GET_RANDOM_CLUES_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ui;\r\n","import { combineReducers } from \"redux\";\r\nimport clues from \"./clues\";\r\nimport ui from \"./ui\";\r\n\r\nexport default combineReducers({\r\n  clues,\r\n  ui\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst enhancer = compose(\r\n  applyMiddleware(thunk),\r\n  (window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__()) ||\r\n    compose\r\n);\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nexport default store;\r\n","import styled from \"styled-components/macro\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col } from \"react-grid-system\";\r\n\r\nexport const FlexCol = styled(Col)`\r\n  display: flex;\r\n  flex-direction: ${props => props.flexDirection};\r\n  align-items: ${props => props.alignItems};\r\n  justify-content: ${props => props.justifyContent};\r\n  flex-wrap: ${props => props.flexWrap};\r\n  align-content: ${props => props.alignContent};\r\n  padding-right: 0px;\r\n  padding-left: 0px;\r\n`;\r\n\r\nFlexCol.defaultProps = {\r\n  flexDirection: \"row\"\r\n};\r\n\r\nFlexCol.propTypes = {\r\n  direction: PropTypes.oneOf([\r\n    \"row\",\r\n    \"column\",\r\n    \"row-reverse\",\r\n    \"column-reverse\"\r\n  ]),\r\n  alignItems: PropTypes.oneOf([\r\n    \"stretch\",\r\n    \"flex-start\",\r\n    \"flex-end\",\r\n    \"center\",\r\n    \"baseline\"\r\n  ]),\r\n  justifyContent: PropTypes.oneOf([\r\n    \"flex-start\",\r\n    \"flex-end\",\r\n    \"center\",\r\n    \"space-between\",\r\n    \"space-around\",\r\n    \"space-evenly\"\r\n  ]),\r\n  flexWrap: PropTypes.oneOf([\"no-wrap\", \"wrap\", \"wrap-reverse\"]),\r\n  alignContent: PropTypes.oneOf([\r\n    \"flex-start\",\r\n    \"flex-end\",\r\n    \"center\",\r\n    \"stretch\",\r\n    \"space-between\",\r\n    \"space-around\"\r\n  ])\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { Button } from \"reakit\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  background-color: whitesmoke;\r\n  color: #020788;\r\n  padding: 5px 10px;\r\n  border-radius: 1.25em;\r\n  box-shadow: 1px 1px 1px 1px #ccc;\r\n  width: 235px;\r\n  font-size: 26px;\r\n  height: 50px;\r\n`;\r\n\r\nexport default StyledButton;\r\n","import React from \"react\";\r\nimport { Row } from \"react-grid-system\";\r\nimport { FlexCol } from \"./styled/FlexCol\";\r\nimport StyledButton from \"./styled/StyledButton\";\r\n\r\nconst FrontPage = ({ toggleActiveGame, getRandomClues }) => {\r\n  return (\r\n    <>\r\n      <Row style={{ height: \"35%\", minHeight: \"200px\" }} className=\"front-page\">\r\n        <FlexCol justifyContent=\"center\" alignItems=\"flex-end\">\r\n          <h1 style={{ fontSize: \"4rem\", marginBottom: \"0px\" }}>\r\n            Practice JEOPARDY!\r\n          </h1>\r\n        </FlexCol>\r\n      </Row>\r\n      <Row>\r\n        <FlexCol\r\n          xs={12}\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{\r\n            height: \"40%\",\r\n            minHeight: \"200px\",\r\n            padding: \"0px 50px\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <p>\r\n            Flash card-style questions and answers from Jeopardy questions\r\n            throughout the ages\r\n          </p>\r\n        </FlexCol>\r\n      </Row>\r\n      <Row>\r\n        <FlexCol align=\"center\" justify=\"center\" flexDirection=\"column\">\r\n          <StyledButton\r\n            alt=\"start\"\r\n            className=\"start-button\"\r\n            width=\"7rem\"\r\n            onClick={() => {\r\n              toggleActiveGame(false);\r\n              getRandomClues();\r\n            }}\r\n          >\r\n            START\r\n          </StyledButton>\r\n          <p>100 clues from a random date</p>\r\n        </FlexCol>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FrontPage;\r\n","const styles = {\r\n  disabled: {\r\n    stroke: \"gray\",\r\n    fill: \"lightgray\"\r\n  },\r\n  enabled: {\r\n    stroke: \"white\",\r\n    fill: \"020788\"\r\n  },\r\n  disabledHover: {\r\n    stroke: \"gray\",\r\n    fill: \"lightgray\"\r\n  },\r\n  enabledHover: {\r\n    stroke: \"white\",\r\n    fill: \"lightblue\"\r\n  }\r\n};\r\n\r\nexport const buttons = {\r\n  enabled: {\r\n    stroke: \"white\",\r\n    fill: \"020788\"\r\n  },\r\n  enabledHover: {\r\n    stroke: \"white\",\r\n    fill: \"lightblue\"\r\n  }\r\n};\r\n\r\nexport default styles;\r\n","import styled from \"styled-components/macro\";\r\nimport ArrowLeftCircle from \"react-feather/dist/icons/arrow-left-circle\";\r\nimport styles from \"../styles/styles\";\r\n\r\nconst LeftArrow = styled(ArrowLeftCircle)`\r\n  fill: ${({ disabled }) =>\r\n    disabled ? styles.disabled.fill : styles.enabled.fill};\r\n  stroke: ${({ disabled }) =>\r\n    disabled ? styles.disabled.stroke : styles.enabled.stroke};\r\n  :hover {\r\n    fill: ${({ disabled }) =>\r\n      disabled ? styles.disabledHover.fill : styles.enabledHover.fill};\r\n    stroke: ${({ disabled }) =>\r\n      disabled ? styles.disabledHover.stroke : styles.enabledHover.stroke};\r\n  }\r\n`;\r\n\r\nexport default LeftArrow;\r\n","import styled from \"styled-components/macro\";\r\nimport ArrowRightCircle from \"react-feather/dist/icons/arrow-right-circle\";\r\nimport styles from \"../styles/styles\";\r\n\r\nconst RightArrow = styled(ArrowRightCircle)`\r\n  fill: ${({ disabled }) =>\r\n    disabled ? styles.disabled.fill : styles.enabled.fill};\r\n  stroke: ${({ disabled }) =>\r\n    disabled ? styles.disabled.stroke : styles.enabled.stroke};\r\n\r\n  :hover {\r\n    fill: ${({ disabled }) =>\r\n      disabled ? styles.disabledHover.fill : styles.enabledHover.fill};\r\n    stroke: ${({ disabled }) =>\r\n      disabled ? styles.disabledHover.stroke : styles.enabledHover.stroke};\r\n  }\r\n`;\r\n\r\nexport default RightArrow;\r\n","import styled from \"styled-components/macro\";\r\nimport Menu from \"react-feather/dist/icons/menu\";\r\nimport styles from \"../styles/styles\";\r\n\r\nconst MenuIcon = styled(Menu)`\r\n  stroke: ${styles.enabled.stroke};\r\n  align-self: center;\r\n`;\r\n\r\nexport default MenuIcon;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-grid-system\";\r\nimport StyledButton from \"../styled/StyledButton\";\r\nimport LeftArrow from \"../styled/LeftArrow\";\r\nimport RightArrow from \"../styled/RightArrow\";\r\nimport MenuIcon from \"../styled/MenuIcon\";\r\nimport { FlexCol } from \"../styled/FlexCol\";\r\nimport \"./ClueCard.css\";\r\n\r\nconst ClueCard = ({\r\n  clue,\r\n  category,\r\n  value,\r\n  airDate,\r\n  answer,\r\n  currentPage,\r\n  totalPages,\r\n  answerVisible,\r\n  toggleActiveGame,\r\n  toggleAnswerVisible,\r\n  pageBack,\r\n  pageForward\r\n}) => {\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"stretch\",\r\n        paddingLeft: \"0px\",\r\n        paddingRight: \"0px\"\r\n      }}\r\n    >\r\n      <Row style={{ height: \"75px\" }}>\r\n        <FlexCol>\r\n          <MenuIcon\r\n            className=\"menu\"\r\n            alt=\"menu\"\r\n            size=\"75px\"\r\n            onClick={() => toggleActiveGame(true)}\r\n          />\r\n        </FlexCol>\r\n      </Row>\r\n      <Row nogutter className=\"top\" style={{ flex: \"1 1 auto\" }}>\r\n        <FlexCol className=\"card\" alignItems=\"center\" flexDirection=\"column\">\r\n          <span className=\"category\">{category}</span>\r\n          {answerVisible ? (\r\n            <p className=\"answer\">{answer}</p>\r\n          ) : (\r\n            <p className=\"clue\">{clue}</p>\r\n          )}\r\n          <div className=\"button\">\r\n            <StyledButton\r\n              onClick={() => {\r\n                toggleAnswerVisible(answerVisible);\r\n              }}\r\n            >\r\n              {answerVisible ? \"BACK TO CLUE\" : \"REVEAL ANSWER\"}\r\n            </StyledButton>\r\n          </div>\r\n        </FlexCol>\r\n      </Row>\r\n\r\n      <Row\r\n        nogutter\r\n        style={{ flex: \"0 1 auto\", height: \"20vh\", overflowY: \"wrap\" }}\r\n      >\r\n        <FlexCol\r\n          xs={2}\r\n          alignItems=\"center\"\r\n          style={{\r\n            height: \"100%\"\r\n          }}\r\n        >\r\n          <LeftArrow\r\n            alt=\"Page Back\"\r\n            disabled={currentPage === \"1\"}\r\n            size=\"75px\"\r\n            onClick={() => {\r\n              pageBack(currentPage);\r\n\r\n              if (answerVisible) {\r\n                toggleAnswerVisible(answerVisible);\r\n              }\r\n            }}\r\n          />\r\n        </FlexCol>\r\n        <FlexCol\r\n          xs={8}\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{\r\n            height: \"100%\"\r\n          }}\r\n        >\r\n          <FlexCol\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            flexDirection=\"column\"\r\n          >\r\n            <p style={{ margin: \"0px 5px\" }}>{`$${value}`}</p>\r\n            <p style={{ margin: \"0px 5px\" }}>\r\n              {`Aired ${new Date(Date.parse(airDate))}`.slice(0, -42)}\r\n            </p>\r\n            <p style={{ margin: \"0px 5px\" }}>\r\n              {\"Clue \" + currentPage + \" of \" + totalPages}\r\n            </p>\r\n          </FlexCol>\r\n        </FlexCol>\r\n        <FlexCol\r\n          xs={2}\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-end\"\r\n          style={{\r\n            height: \"100%\"\r\n          }}\r\n        >\r\n          <RightArrow\r\n            alt=\"Page Forward\"\r\n            disabled={currentPage === totalPages}\r\n            size=\"75px\"\r\n            onClick={() => {\r\n              pageForward(currentPage, totalPages);\r\n\r\n              if (answerVisible) {\r\n                toggleAnswerVisible(answerVisible);\r\n              }\r\n            }}\r\n          />\r\n        </FlexCol>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ClueCard;\r\n","import * as c from \"./constants\";\r\n\r\nexport const pageBack = currentPage => ({\r\n  type: c.PAGE_BACK,\r\n  payload: {\r\n    currentPage\r\n  }\r\n});\r\n\r\nexport const pageForward = (currentPage, totalPages) => ({\r\n  type: c.PAGE_FORWARD,\r\n  payload: {\r\n    currentPage,\r\n    totalPages\r\n  }\r\n});\r\n\r\nexport const toggleActiveGame = toggleState => ({\r\n  type: c.TOGGLE_ACTIVE_GAME,\r\n  payload: toggleState\r\n});\r\n\r\nexport const toggleAnswerVisible = answerVisible => ({\r\n  type: c.TOGGLE_ANSWER_VISIBLE,\r\n  payload: {\r\n    answerVisible\r\n  }\r\n});\r\n\r\nexport const getRandomCluesRequest = () => ({\r\n  type: c.GET_RANDOM_CLUES_REQUEST\r\n});\r\n\r\nexport const getRandomCluesSuccess = clues => ({\r\n  type: c.GET_RANDOM_CLUES_SUCCESS,\r\n  payload: {\r\n    clues\r\n  }\r\n});\r\n\r\nexport const getRandomCluesError = error => ({\r\n  type: c.GET_RANDOM_CLUES_ERROR,\r\n  payload: {\r\n    error\r\n  }\r\n});\r\n\r\nexport const fetchClues = () => {\r\n  return dispatch => {\r\n    dispatch(getRandomCluesRequest());\r\n\r\n    fetch(`/clues`, {\r\n      method: \"GET\"\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`${response.status} ${response.statusText}`);\r\n        }\r\n\r\n        return response.json();\r\n      })\r\n      .then(clues => {\r\n        dispatch(getRandomCluesSuccess(clues));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getRandomCluesError(err));\r\n      });\r\n  };\r\n};\r\n","export const isGameActive = state => {\r\n  return state.ui && state.ui.gameActive;\r\n};\r\n\r\nexport const isLoading = state => {\r\n  return state.ui && state.ui.loading;\r\n};\r\n\r\nexport const isAnswerVisible = state => {\r\n  return state.clues && state.clues.answerVisible;\r\n};\r\n\r\nexport const getCurrentPage = state => {\r\n  return state.ui && state.ui.currentPage;\r\n};\r\n\r\nexport const getTotalPages = state => {\r\n  return state.ui && state.ui.totalPages;\r\n};\r\n\r\nexport const getClues = state => {\r\n  return state.clues && state.clues.cluesById;\r\n};\r\n\r\nexport const getClueIds = state => {\r\n  return state.clues && state.clues.allIds;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ClueCard from \"./ClueCard\";\r\nimport {\r\n  toggleActiveGame,\r\n  toggleAnswerVisible,\r\n  pageBack,\r\n  pageForward\r\n} from \"../../redux/actionCreators\";\r\nimport {\r\n  isAnswerVisible,\r\n  isLoading,\r\n  getCurrentPage,\r\n  getTotalPages,\r\n  getClues,\r\n  getClueIds\r\n} from \"../../redux/selectors\";\r\n\r\nconst convertToString = num => {\r\n  return num && num.toString();\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    answerVisible: isAnswerVisible(state),\r\n    loading: isLoading(state),\r\n    currentPage: getCurrentPage(state),\r\n    totalPages: getTotalPages(state),\r\n    clues: getClues(state),\r\n    clueIds: getClueIds(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toggleActiveGame: toggleState => {\r\n      dispatch(toggleActiveGame(toggleState));\r\n    },\r\n    toggleAnswerVisible: answerVisible => {\r\n      dispatch(toggleAnswerVisible(answerVisible));\r\n    },\r\n    pageBack: currentPage => {\r\n      dispatch(pageBack(currentPage));\r\n    },\r\n    pageForward: (currentPage, totalPages) => {\r\n      dispatch(pageForward(currentPage, totalPages));\r\n    }\r\n  };\r\n};\r\n\r\nclass ClueCardContainer extends Component {\r\n  render() {\r\n    const {\r\n      loading,\r\n      answerVisible,\r\n      currentPage,\r\n      totalPages,\r\n      clues,\r\n      clueIds,\r\n      toggleActiveGame,\r\n      toggleAnswerVisible,\r\n      pageBack,\r\n      pageForward\r\n    } = this.props;\r\n\r\n    return loading ? (\r\n      <p>Loading...</p>\r\n    ) : (\r\n      <ClueCard\r\n        clue={clues[clueIds[currentPage - 1]].clue}\r\n        answer={clues[clueIds[currentPage - 1]].answer}\r\n        category={clues[clueIds[currentPage - 1]].category}\r\n        value={clues[clueIds[currentPage - 1]].value}\r\n        airDate={clues[clueIds[currentPage - 1]].airDate}\r\n        index={currentPage}\r\n        totalClues={totalPages}\r\n        currentPage={convertToString(currentPage)}\r\n        totalPages={convertToString(totalPages)}\r\n        answerVisible={answerVisible}\r\n        toggleActiveGame={toggleActiveGame}\r\n        toggleAnswerVisible={toggleAnswerVisible}\r\n        pageBack={pageBack}\r\n        pageForward={pageForward}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ClueCardContainer);\r\n","import styled from \"styled-components/macro\";\r\n\r\nconst Background = styled.div`\r\n  background: linear-gradient(180deg, #050b9d 25.52%, #040639 100%), #020788;\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nexport default Background;\r\n","import styled from \"styled-components/macro\";\r\nimport { Container } from \"react-grid-system\";\r\n\r\nconst StyledContainer = styled(Container)`\r\n  height: 100vh;\r\n  color: whitesmoke;\r\n  font-size: 26px;\r\n  text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  text-align: center;\r\n`;\r\n\r\nexport default StyledContainer;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./App.css\";\r\nimport FrontPage from \"../components/FrontPage\";\r\nimport ClueCardContainer from \"../components/ClueCard/ClueCardContainer\";\r\nimport { toggleActiveGame } from \"../redux/actionCreators\";\r\nimport { isGameActive, isLoading } from \"../redux/selectors\";\r\nimport { fetchClues } from \"../redux/actionCreators\";\r\nimport Background from \"./styled/Background\";\r\nimport StyledContainer from \"./styled/StyledContainer\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    gameActive: isGameActive(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toggleActiveGame: toggleState => {\r\n      dispatch(toggleActiveGame(toggleState));\r\n    },\r\n    fetchClues: () => {\r\n      dispatch(fetchClues());\r\n    }\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { gameActive, toggleActiveGame, fetchClues } = this.props;\r\n\r\n    const MainComponent = gameActive ? (\r\n      <ClueCardContainer />\r\n    ) : (\r\n      <FrontPage\r\n        toggleActiveGame={toggleActiveGame}\r\n        getRandomClues={fetchClues}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Background>\r\n        <StyledContainer fluid={true}>{MainComponent}</StyledContainer>\r\n      </Background>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ScreenClassProvider } from \"react-grid-system\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ScreenClassProvider>\n      <App />\n    </ScreenClassProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}